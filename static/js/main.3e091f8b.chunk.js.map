{"version":3,"sources":["components/FAQs.jsx","components/AboutDialogs.jsx","state/Web3Context.js","components/AccountChip.jsx","components/Header.jsx","components/EthSlider.js","components/HTMLTooltip.jsx","components/PricingSummary.jsx","components/TornadoCashNote.jsx","utils/ClipboardUtils.js","utils/PricingUtils.js","components/ConvertCard.jsx","hooks/usePrepareDeposit.jsx","components/DoneCard.jsx","components/ConvertScreen.jsx","components/ConnectButton.jsx","components/WrongNetworkPopup.jsx","components/ConnectScreen.jsx","pages/MainPage.js","App.js","index.js","components/logo.svg","utils/TornadoUtils.js"],"names":["ExpansionPanel","withStyles","root","padding","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","FAQ","title","children","elevation","defaultExpanded","expandIcon","aria-controls","id","Typography","variant","TextFAQ","text","gutterBottom","Intro","Link","href","target","color","underline","DepositSteps","List","ListItem","HowToWithdraw","entries","FAQs","map","entry","DialogTitle","closeButton","position","right","top","palette","grey","props","classes","onClose","other","disableTypography","className","IconButton","aria-label","onClick","DialogContent","backgroundColor","background","paper","MuiDialogContent","AboutDialog","React","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","Button","Dialog","dividers","Web3Context","createContext","displayName","AccountChip","str","context","useContext","accounts","Chip","icon","label","substr","length","useStyles","makeStyles","flexGrow","justifyContent","logo","width","height","Header","Toolbar","src","alt","Grid","container","justify","alignItems","Hidden","xsDown","item","component","marks","value","valueInGwei","valuetext","valueLabelFormat","find","mark","replace","EthSlider","onChange","disabled","Slider","defaultValue","getAriaValueText","aria-labelledby","step","valueLabelDisplay","_","gweiValue","tooltipStyles","tooltip","borderRadius","maxWidth","fontSize","typography","pxToRem","border","HTMLTooltip","tooltipClasses","Tooltip","placement","cellRoot","PricingSummary","price","priceImpact","intl","useIntl","rows","useMemo","formatNumber","minimumFractionDigits","maximumFractionDigits","description","style","Table","size","TableBody","row","TableRow","key","TableCell","align","arrow","textFieldStyles","primary","TornadoCashNote","textFieldClasses","copyContent","containerid","document","selection","range","body","createTextRange","moveToElementText","getElementById","select","execCommand","window","getSelection","removeAllRanges","createRange","selectNode","addRange","copyToClipboard","OutlinedInput","multiline","fullWidth","Snackbar","autoHideDuration","message","priceConversion","web3","amountToConvertInWei","a","eth","net","getId","networkId","renBTCETHPairDeployment","renBTCETHPair","networks","renBTCDeployment","renBTC","uniswapETH","WETH","uniswapRenBTC","Token","address","name","contract","Contract","abi","methods","getReserves","call","reserve0","reserve1","uniswapPair","Pair","TokenAmount","ethAmount","renBTCTokenAmountInSats","getInputAmount","btcToTransfer","addPricingSafetyMargin","raw","calculatePriceImpact","orderPrice","ethReserveInWei","console","log","spotPrice","toFixed","amount","amountWithMinersFees","JSBI","add","BigInt","divide","multiply","card","textAlign","cardTitle","cardContent","paddingTop","paddingBottom","paddingRight","paddingLeft","pricingSummary","checkbox","submit","spinner","ConvertCard","deposit","ethToRetrieve","setEthToRetrieve","awaitingTransaction","setAwaitingTransaction","agreed","setAgreed","preparedDeposit","prepareDeposit","enoughLiquidity","tornado","note","commitment","debouncedPrepareDeposit","useConstant","AwesomeDebouncePromise","useAsync","setLoading","state","loading","usePrepareDeposit","handleCheckBoxEvent","event","checked","onDeposit","result","NoteOrWarning","xs","Alert","severity","approximateSlippage","FormGroup","FormControlLabel","control","Checkbox","type","Card","CardContent","link","DoneCard","onStart","ConvertScreen","contractAddress","setContractAddress","gatewayJS","setGatewayJS","recovering","setRecovering","completed","setCompleted","setNote","recoverLastTransfer","useCallback","getGateways","previousGateways","previousTransfers","Array","from","values","Promise","allSettled","filter","isPaidTransfer","previousTransfer","recoverTransfer","currentProvider","pause","status","useEffect","GatewayJS","BTCToPrivateETH","sendToken","Tokens","BTC","Btc2Eth","suggestedAmount","sendTo","contractFn","nonce","utils","randomNonce","contractParams","web3Provider","AlertTitle","ConnectButton","onConnect","getModalStyle","left","transform","outline","WrongNetworkPopup","modalStyle","Modal","disableAutoFocus","ConnectScreen","onDisconnect","popupOpen","setPopupOpen","memoizedConnect","subscribeToProviderEvents","provider","on","newAccounts","isArray","connected","newNetworkId","isNetworkSuppported","toString","web3Modal","setupWeb3Modal","connect","Web3","isMetaMask","autoRefreshOnNetworkChange","getAccounts","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","Web3Modal","cacheProvider","up","marginTop","MainPage","web3State","setWeb3State","Provider","direction","Container","fixed","darkTheme","createMuiTheme","default","main","secondary","App","locale","navigator","language","ThemeProvider","CssBaseline","Component","ReactDOM","render","module","exports","bigInt","_bigInt","rbigint","nbytes","leBuff2int","crypto","randomBytes","pedersenHash","data","babyJub","unpackPoint","_pedersenHash","hash","toHex","number","Buffer","padStart","createDeposit","nullifier","secret","preimage","concat","leInt2Buff","nullifierHash","netId","decimalEth","noteString"],"mappings":"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","file":"static/js/main.3e091f8b.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst ExpansionPanel = withStyles({\n  root: {\n    padding: 0,\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    padding: 0,\n    marginBottom: -1,\n    minHeight: 56,\n    \"&$expanded\": {\n      minHeight: 56,\n    },\n  },\n  content: {\n    \"&$expanded\": {\n      margin: \"12px 0\",\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(0),\n  },\n}))(MuiExpansionPanelDetails);\n\nfunction FAQ({ title, children, expanded }) {\n  return (\n    <ExpansionPanel elevation={0} defaultExpanded={!!expanded}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <ExpansionPanelDetails>\n          <Typography variant=\"h6\">{title}</Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanelSummary>\n      {children}\n    </ExpansionPanel>\n  );\n}\n\nfunction TextFAQ({ title, text, expanded }) {\n  return (\n    <FAQ title={title} expanded={expanded}>\n      <Typography variant=\"body1\" gutterBottom>\n        {text}\n      </Typography>\n    </FAQ>\n  );\n}\n\nconst Intro = () => {\n  return (\n    <Typography variant=\"subtitle1\">\n      This project allows you to acquire privacy preserving Ether with your\n      Bitcoins. It uses{\" \"}\n      <Link\n        href=\"https://renproject.io/\"\n        target=\"_blank\"\n        color=\"inherit\"\n        underline=\"always\"\n      >\n        RenVM\n      </Link>\n      {\", \"}\n      <Link\n        href=\"https://uniswap.org/\"\n        target=\"_blank\"\n        color=\"inherit\"\n        underline=\"always\"\n      >\n        Uniswap\n      </Link>\n      {\" and \"}\n      <Link\n        href=\"https://tornado.cash/\"\n        target=\"_blank\"\n        color=\"inherit\"\n        underline=\"always\"\n      >\n        Tornado Cash\n      </Link>\n      .\n    </Typography>\n  );\n};\n\nconst DepositSteps = () => {\n  return (\n    <List>\n      <ListItem>\n        <Typography>1) Select the required ETH amount.</Typography>\n      </ListItem>\n      <ListItem>\n        <Typography>2) Press the start button.</Typography>\n      </ListItem>\n      <ListItem>\n        <Typography>\n          3) Send the required BTC amount to the RenVM address displayed.\n        </Typography>\n      </ListItem>\n      <ListItem>\n        <Typography>\n          4) Wait for bitcoin confirmations, this takes 2 blocks. You will be\n          notified by the dApp when all confirmations are verified.\n        </Typography>\n      </ListItem>\n      <ListItem>\n        <Typography>\n          5) When prompted sign the transaction in your Ethereum wallet.\n        </Typography>\n      </ListItem>\n      <ListItem>\n        <Typography>\n          6) Backup the Tornado Cash note for future withdrawal.\n        </Typography>\n      </ListItem>\n    </List>\n  );\n};\n\nconst HowToWithdraw = () => {\n  return (\n    <>\n      <Typography variant=\"body1\">\n        To withdraw your private ETH, go to{\" \"}\n        <Link\n          href=\"https://tornado.cash/\"\n          target=\"_blank\"\n          color=\"inherit\"\n          underline=\"always\"\n        >\n          Tornado Cash\n        </Link>{\" \"}\n        and present the secret note provided by this dApp.\n      </Typography>\n      <Typography variant=\"body1\">\n        <strong>\n          Never withdraw immediately after a deposit. Before withdrawing read\n          the guide provided on the Tornado Cash website\n        </strong>\n      </Typography>\n    </>\n  );\n};\n\nconst entries = [\n  <FAQ title=\"Intro\" expanded={true}>\n    <Intro />\n  </FAQ>,\n  <TextFAQ\n    title=\"What is renBTC\"\n    text=\"renBTC is a representation of BTC on the Ethereum\n          blockchain. It is an ERC20, and backed 1:1 by BTC \n          locked in RenVM, a decentralized custodian.\n          renBTC is redeemable at any time for real BTC.\"\n  />,\n  <FAQ title=\"How to deposit\">\n    <DepositSteps />\n  </FAQ>,\n  <TextFAQ\n    title=\"Lot sizes and price movement\"\n    text=\"Tornado cash accepts only specific deposit amounts, this app\n            calculates the BTC amount to be converted and adds a 1% buffer to\n            absorb price movements in the renBTC/ETH trading pair which can\n            happen while confirmations are verified. The remainder of the\n            conversion will be sent to your Ethereum address shown in the\n            toolbar. In case the price moves too much and the desired lot size\n            cannot be acquired in Uniswap, the whole renBTC amount will be\n            forwarded to the address shown in the toolbar.\"\n  />,\n  <TextFAQ\n    title=\"Transaction recovery\"\n    text=\"In case the tab containing this app is closed whilst a transaction\n            is not fully finalized, re-opening the app will prompt the user to\n            finalize the pending transaction. For this reason is very important\n            to copy and store the withdrawal note before starting any\n            transaction as the app can only recover the previous transaction but\n            not the previous note.\"\n  />,\n  <FAQ title=\"How to withdraw\">\n    <HowToWithdraw />\n  </FAQ>,\n  <FAQ title=\"Technical explanation\">\n    <Typography variant=\"body1\">\n      For explanation and source code go to the{\" \"}\n      <Link\n        href=\"https://github.com/TSnark/btc-2-private-eth\"\n        color=\"inherit\"\n        target=\"_blank\"\n        underline=\"always\"\n      >\n        project page\n      </Link>{\" \"}\n      and present the secret note provided by this dApp.\n    </Typography>\n  </FAQ>,\n];\n\nexport default function FAQs() {\n  return <>{entries.map((entry) => entry)}</>;\n}\n","import React from \"react\";\nimport { withStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport FAQs from \"./FAQs\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(3),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 2),\n  },\n}))(MuiDialogContent);\n\nexport default function AboutDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"secondary\" onClick={handleClickOpen}>\n        How it works\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullScreen={fullScreen}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          BTC to Private ETH\n        </DialogTitle>\n        <DialogContent dividers>\n          <FAQs />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Web3Context = React.createContext(null);\nWeb3Context.displayName = \"Web3Context\";\nexport default Web3Context;\n","import React, { useContext } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Web3Context from \"../state/Web3Context\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\n\nfunction ellipsisMiddle(str) {\n  return str.substr(0, 6) + \"...\" + str.substr(str.length - 3, str.length);\n}\n\nexport default function AccountChip() {\n  const context = useContext(Web3Context);\n  return (\n    <>\n      {!!context && !!context.accounts && (\n        <Chip\n          icon={<CheckCircleOutlineIcon />}\n          label={ellipsisMiddle(context.accounts[0])}\n          variant=\"outlined\"\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, IconButton, Link } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport logo from \"./logo.svg\";\nimport AboutDialog from \"./AboutDialogs\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport AccountChip from \"./AccountChip\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"space-between\",\n  },\n  logo: {\n    padding: 12,\n    width: 64,\n    height: 64,\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Toolbar className={classes.root}>\n        <img className={classes.logo} src={logo} alt=\"pRamp logo\" />\n        <Grid container spacing={2} justify=\"flex-end\" alignItems=\"center\">\n          <Hidden xsDown>\n            <Grid item>\n              <AccountChip />\n            </Grid>\n          </Hidden>\n          <Grid item>\n            <AboutDialog />\n          </Grid>\n          <Grid item>\n            <IconButton\n              color=\"default\"\n              component={Link}\n              href=\"https://github.com/TSnark/btc-2-private-eth\"\n              target=\"_blank\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst marks = [\n  {\n    value: 0,\n    valueInGwei: 1e17,\n    label: \"0.1 ETH\",\n  },\n  {\n    value: 33,\n    valueInGwei: 1e18,\n    label: \"1 ETH\",\n  },\n  {\n    value: 66,\n    valueInGwei: 1e19,\n    label: \"10 ETH\",\n  },\n  {\n    value: 100,\n    valueInGwei: 1e20,\n    label: \"100 ETH\",\n  },\n];\n\nfunction valuetext(value) {\n  return `${value} ETH`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.find((mark) => mark.value === value).label.replace(\" ETH\", \"\");\n}\n\nfunction gweiValue(value) {\n  return marks.find((mark) => mark.value === value).valueInGwei;\n}\n\nexport default function EthSlider({ onChange, disabled }) {\n  return (\n    <div>\n      <Typography id=\"eth-slider\" variant=\"h6\" gutterBottom>\n        Amount to retrieve\n      </Typography>\n      <Slider\n        disabled={disabled}\n        defaultValue={0}\n        valueLabelFormat={valueLabelFormat}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"eth-slider\"\n        step={null}\n        valueLabelDisplay=\"auto\"\n        marks={marks}\n        onChange={(_, value) => onChange(gweiValue(value))}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst tooltipStyles = makeStyles((theme) => ({\n  tooltip: {\n    borderRadius: 12,\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n    padding: theme.spacing(1, 2, 1, 2),\n  },\n}));\n\nexport default function HTMLTooltip({ title, children }) {\n  const tooltipClasses = tooltipStyles();\n\n  return (\n    <Tooltip classes={tooltipClasses} placement=\"right-start\" title={title}>\n      {children}\n    </Tooltip>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useIntl } from \"react-intl\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport HTMLTooltip from \"./HTMLTooltip\";\n\nconst useStyles = makeStyles(() => ({\n  cellRoot: {\n    borderBottom: \"none\",\n  },\n}));\n\nexport default function PricingSummary({ price, priceImpact }) {\n  const classes = useStyles();\n  const intl = useIntl();\n\n  let rows = useMemo(\n    () => [\n      {\n        label: \"Price\",\n        value: `${intl.formatNumber(price, {\n          minimumFractionDigits: 10,\n          maximumFractionDigits: 10,\n        })} BTC per ETH `,\n      },\n      {\n        description:\n          \"Estimated difference between spot price and your trade price due to order size.\",\n        color: priceImpact > 0.05 ? \"error\" : \"inherit\",\n        label: \"Price Impact\",\n        value: intl.formatNumber(priceImpact, {\n          style: \"percent\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n      },\n      { label: \"RenVM Fees\", value: \"0.1% + 0.00035 BTC\" },\n      { label: \"Uniswap Fees\", value: \"0.3%\" },\n    ],\n    [price, priceImpact, intl]\n  );\n\n  return (\n    <Table className={classes.root} size=\"small\">\n      <TableBody>\n        {rows.map((row) => (\n          <TableRow key={row.label}>\n            <TableCell classes={{ root: classes.cellRoot }} padding=\"none\">\n              <Typography color={row.color} variant=\"body1\">\n                {row.label}\n              </Typography>\n            </TableCell>\n            <TableCell\n              align=\"right\"\n              classes={{ root: classes.cellRoot }}\n              padding=\"none\"\n            >\n              <Typography color={row.color} variant=\"body1\">\n                {row.value}\n              </Typography>\n            </TableCell>\n            {row.description && (\n              <TableCell\n                align=\"right\"\n                classes={{ root: classes.cellRoot }}\n                padding=\"none\"\n              >\n                <HTMLTooltip arrow title={row.description}>\n                  <InfoOutlinedIcon fontSize=\"small\" />\n                </HTMLTooltip>\n              </TableCell>\n            )}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import React, { useState } from \"react\";\nimport copyToClipboard from \"../utils/ClipboardUtils\";\n\nimport { OutlinedInput, Snackbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HTMLTooltip from \"./HTMLTooltip\";\n\nconst textFieldStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 24,\n  },\n  disabled: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nexport default function TornadoCashNote({ id, title, content }) {\n  const textFieldClasses = textFieldStyles();\n  const [open, setOpen] = useState(false);\n\n  const copyContent = () => {\n    copyToClipboard(id);\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <HTMLTooltip\n        title={\n          <>\n            <Typography color=\"inherit\">Click to copy</Typography>\n            {\n              \"You will use this note to retrieve your private ETH from Tornado Cash.\"\n            }\n            <Typography color=\"inherit\">\n              <u>\n                <b>{\"Keep it private and safe.\"}</b>\n              </u>\n            </Typography>\n          </>\n        }\n      >\n        <OutlinedInput\n          classes={textFieldClasses}\n          disabled\n          onClick={() => copyContent()}\n          id={id}\n          label={title}\n          variant=\"outlined\"\n          value={content}\n          multiline\n          fullWidth\n        />\n      </HTMLTooltip>\n      <Snackbar\n        open={open}\n        autoHideDuration={2000}\n        message=\"Copied to clipboard\"\n        onClose={() => setOpen(false)}\n      />\n    </>\n  );\n}\n","export default function copyToClipboard(containerid) {\n  if (document.selection) {\n    let range = document.body.createTextRange();\n    range.moveToElementText(document.getElementById(containerid));\n    range.select().createTextRange();\n    document.execCommand(\"copy\");\n  } else if (window.getSelection) {\n    window.getSelection().removeAllRanges();\n    let range = document.createRange();\n    range.selectNode(document.getElementById(containerid));\n    window.getSelection().addRange(range);\n    document.execCommand(\"copy\");\n    window.getSelection().removeAllRanges();\n  }\n}\n","import renBTCETHPair from \"../contracts/IUniswapV2Pair.json\";\nimport renBTC from \"../contracts/renBTC.json\";\nimport JSBI from \"jsbi\";\n\nimport { Token, TokenAmount, Pair, WETH } from \"@uniswap/sdk\";\n\nconst uniswapFees = 0.003;\nconst weiToSatoshi = 1e10;\nconst renVMFeesInSats = \"35000\";\n\nexport default async function priceConversion(web3, amountToConvertInWei) {\n  const networkId = await web3.eth.net.getId();\n  const renBTCETHPairDeployment = renBTCETHPair.networks[networkId];\n  const renBTCDeployment = renBTC.networks[networkId];\n\n  let uniswapETH = WETH[networkId];\n  let uniswapRenBTC = new Token(\n    networkId,\n    renBTCDeployment.address,\n    8,\n    renBTCDeployment.name\n  );\n\n  const contract = new web3.eth.Contract(\n    renBTCETHPair.abi,\n    renBTCETHPairDeployment && renBTCETHPairDeployment.address\n  );\n  let { reserve0, reserve1 } = await contract.methods.getReserves().call();\n\n  const uniswapPair = new Pair(\n    new TokenAmount(uniswapRenBTC, reserve0),\n    new TokenAmount(uniswapETH, reserve1)\n  );\n\n  let ethAmount = new TokenAmount(uniswapETH, amountToConvertInWei);\n  try {\n    const renBTCTokenAmountInSats = uniswapPair.getInputAmount(ethAmount)[0];\n    let btcToTransfer = addPricingSafetyMargin(renBTCTokenAmountInSats.raw);\n    const { orderPrice, priceImpact } = calculatePriceImpact(\n      reserve0,\n      reserve1,\n      renBTCTokenAmountInSats,\n      amountToConvertInWei\n    );\n    return {\n      price: orderPrice * weiToSatoshi,\n      priceImpact,\n      btcToTransfer,\n      ethReserveInWei: reserve1,\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      price: 0,\n      priceImpact: 1,\n      btcToTransfer: 0,\n      ethReserveInWei: reserve1,\n    };\n  }\n}\n\n// This is an estimate in percentage so use floating point calculation\nfunction calculatePriceImpact(\n  reserve0,\n  reserve1,\n  renBTCTokenAmountInSats,\n  amountToConvertInWei\n) {\n  const spotPrice = reserve0 / reserve1;\n  const orderPrice = renBTCTokenAmountInSats.raw / amountToConvertInWei;\n  const priceImpact = (1 - uniswapFees - spotPrice / orderPrice).toFixed(3); // We use 2 decimals on the percentage representation\n  return { orderPrice, priceImpact };\n}\n\n// We add a safety margin and fees in case the price moves while we wait for confirmations\nfunction addPricingSafetyMargin(amount) {\n  // Add RenVM miners fees\n  const amountWithMinersFees = JSBI.add(amount, JSBI.BigInt(renVMFeesInSats));\n  // Add 1% buffer to in case the price moves during confirmation this also includes 0.1% RenVM fees\n  return JSBI.divide(\n    JSBI.multiply(amountWithMinersFees, JSBI.BigInt(\"101\")),\n    JSBI.BigInt(\"100\")\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EthSlider from \"./EthSlider\";\nimport PricingSummary from \"./PricingSummary\";\nimport TornadoCashNote from \"./TornadoCashNote\";\nimport Web3Context from \"../state/Web3Context\";\nimport usePrepareDeposit from \"../hooks/usePrepareDeposit\";\nimport GridLoader from \"react-spinners/GridLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    borderRadius: 24,\n    textAlign: \"center\",\n  },\n  cardTitle: {\n    fontSize: 14,\n    textAlign: \"center\",\n    spacing: 10,\n  },\n  cardContent: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(6),\n    paddingLeft: theme.spacing(6),\n  },\n  pricingSummary: {\n    margin: theme.spacing(3, 0, 0),\n  },\n  checkbox: {\n    margin: theme.spacing(2, 0, 0),\n  },\n  submit: {\n    borderRadius: 24,\n    margin: theme.spacing(2, 0, 2),\n  },\n  spinner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: theme.spacing(24, 0, 0),\n  },\n}));\n\nexport default function ConvertCard({ deposit }) {\n  const [ethToRetrieve, setEthToRetrieve] = useState(1e17);\n  const [awaitingTransaction, setAwaitingTransaction] = useState(false);\n  const [agreed, setAgreed] = useState(false);\n\n  const classes = useStyles();\n  const { web3 } = useContext(Web3Context);\n\n  // Call debounced function asynchronously...\n  const preparedDeposit = usePrepareDeposit(web3, ethToRetrieve);\n  const handleCheckBoxEvent = (event) => {\n    setAgreed(event.target.checked);\n  };\n\n  const onDeposit = async () => {\n    setAwaitingTransaction(true);\n    try {\n      await deposit(\n        preparedDeposit.result.btcToTransfer,\n        preparedDeposit.result.commitment,\n        ethToRetrieve,\n        preparedDeposit.result.note\n      );\n      setAwaitingTransaction(false);\n    } catch (error) {\n      setAwaitingTransaction(false);\n      console.log(error);\n    }\n  };\n\n  const NoteOrWarning = () => {\n    return preparedDeposit.result && !preparedDeposit.result.enoughLiquidity ? (\n      <Grid item xs={12}>\n        <Alert severity=\"error\">\n          Insufficient ETH in Uniswap:{\" \"}\n          {preparedDeposit.result &&\n            (preparedDeposit.result.ethReserveInWei / 1e18).toFixed(8)}{\" \"}\n          ETH\n        </Alert>\n      </Grid>\n    ) : (\n      <>\n        <Grid item xs={12}>\n          {preparedDeposit.result.approximateSlippage}\n          <TornadoCashNote\n            id=\"tornado-note\"\n            title=\"Tornado Cash Note\"\n            content={preparedDeposit.result.note}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.pricingSummary}>\n          <PricingSummary\n            price={preparedDeposit.result.price}\n            priceImpact={preparedDeposit.result.priceImpact}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormGroup row className={classes.checkbox}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  disabled={!!awaitingTransaction}\n                  checked={agreed}\n                  onChange={handleCheckBoxEvent}\n                  name=\"agreeCB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"I have safely stored this note\"\n            />\n          </FormGroup>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Button\n            disabled={!!awaitingTransaction || !agreed}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={onDeposit}\n          >\n            Convert BTC to Private ETH\n          </Button>\n        </Grid>\n      </>\n    );\n  };\n\n  if (!preparedDeposit.result) {\n    return (\n      <div className={classes.spinner}>\n        <GridLoader size={16} color={\"#123abc\"} loading={true} />\n      </div>\n    );\n  } else {\n    return (\n      <Card className={classes.card} variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <EthSlider\n                disabled={!!awaitingTransaction}\n                onChange={(value) => {\n                  if (value !== ethToRetrieve) {\n                    setEthToRetrieve(value);\n                    setAgreed(false);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <NoteOrWarning />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n","import { useAsync } from \"react-async-hook\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\nimport useConstant from \"use-constant\";\nimport { deposit as tornado } from \"../utils/TornadoUtils\";\nimport priceConversion from \"../utils/PricingUtils\";\n\nexport default function usePrepareDeposit(web3, ethToRetrieve) {\n  const prepareDeposit = async (web3, ethToRetrieve) => {\n    let {\n      btcToTransfer,\n      ethReserveInWei,\n      priceImpact,\n      price,\n    } = await priceConversion(web3, ethToRetrieve);\n    const enoughLiquidity = ethReserveInWei > ethToRetrieve;\n    let { note, commitment } = await tornado(web3, ethToRetrieve);\n    return {\n      enoughLiquidity,\n      btcToTransfer,\n      ethReserveInWei,\n      note,\n      commitment,\n      priceImpact,\n      price,\n    };\n  };\n\n  const debouncedPrepareDeposit = useConstant(() =>\n    AwesomeDebouncePromise((web3, ethToRetrieve) => {\n      return prepareDeposit(web3, ethToRetrieve);\n    }, 300)\n  );\n\n  // Call debounced function asynchronously...\n  return useAsync(debouncedPrepareDeposit, [web3, ethToRetrieve], {\n    // ...refresh state only after call returns\n    setLoading: (state) => ({ ...state, loading: true }),\n  });\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, CardContent, Typography, Link } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TornadoCashNote from \"./TornadoCashNote\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    borderRadius: 24,\n    textAlign: \"center\",\n  },\n  cardTitle: {\n    fontSize: 14,\n    textAlign: \"center\",\n    spacing: 10,\n  },\n  cardContent: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(6),\n    paddingLeft: theme.spacing(6),\n  },\n  link: {\n    margin: theme.spacing(2, 0, 0),\n  },\n  submit: {\n    borderRadius: 24,\n    margin: theme.spacing(2, 0, 2),\n  },\n}));\n\nexport default function DoneCard({ onStart, note }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card} variant=\"outlined\">\n      <CardContent className={classes.cardContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography gutterBottom variant=\"h6\">\n              Deposit completed\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid item xs={12}>\n              <TornadoCashNote\n                id=\"tornado-note\"\n                title=\"Tornado Cash Note\"\n                content={note}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.link}>\n              <Typography variant=\"body1\" gutterBottom>\n                To withdraw your private ETH, go to{\" \"}\n                <Link\n                  href=\"https://tornado.cash/\"\n                  target=\"_blank\"\n                  color=\"inherit\"\n                  underline=\"always\"\n                >\n                  Tornado Cash\n                </Link>{\" \"}\n                in at least 24 hours\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={onStart}\n              >\n                Start new deposit\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import BTCToPrivateETH from \"../contracts/BTCToPrivateETH.json\";\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport GatewayJS from \"@renproject/gateway\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport JSBI from \"jsbi\";\nimport Web3Context from \"../state/Web3Context\";\nimport ConvertCard from \"./ConvertCard\";\nimport DoneCard from \"./DoneCard\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  spinner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: theme.spacing(24, 0, 0),\n  },\n}));\n\nexport default function ConvertScreen() {\n  const [contractAddress, setContractAddress] = useState();\n  const [gatewayJS, setGatewayJS] = useState();\n  const [loading, setLoading] = useState(true);\n  const [recovering, setRecovering] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [note, setNote] = useState();\n  const { web3, accounts, networkId } = useContext(Web3Context);\n  const classes = useStyles();\n\n  // We recover only the previous \"active\" transaction and force the user\n  // to deal with it.\n  const recoverLastTransfer = useCallback(async () => {\n    try {\n      if (!!gatewayJS) {\n        // Load previous transfer from local storage\n        setLoading(true);\n        const previousGateways = await gatewayJS.getGateways();\n        const previousTransfers = Array.from(previousGateways.values()) || [];\n        setLoading(false);\n\n        if (!!previousTransfers) {\n          setRecovering(true);\n          // Resume last already paid transfers\n          await Promise.allSettled(\n            previousTransfers\n              .filter(isPaidTransfer)\n              .map((previousTransfer) =>\n                gatewayJS\n                  .recoverTransfer(web3.currentProvider, previousTransfer)\n                  .pause()\n                  .result()\n              )\n          );\n          setRecovering(false);\n        }\n      }\n    } catch (e) {\n      setLoading(false);\n      setRecovering(false);\n      console.log(e);\n    }\n  }, [web3, gatewayJS]);\n\n  function isPaidTransfer(previousTransfer) {\n    return (\n      !!previousTransfer &&\n      (previousTransfer.status === \"mint_deposited\" ||\n        previousTransfer.status === \"mint_returnedFromRenVM\")\n    );\n  }\n\n  useEffect(() => {\n    setGatewayJS(new GatewayJS(networkId === \"1\" ? \"mainnet\" : \"testnet\"));\n    setContractAddress(BTCToPrivateETH.networks[networkId].address);\n  }, [networkId]);\n\n  useEffect(() => {\n    recoverLastTransfer();\n  }, [recoverLastTransfer]);\n\n  const deposit = async (btcToTransfer, commitment, ethToRetrieve, note) => {\n    setNote(note);\n    await gatewayJS\n      .open({\n        // Send BTC from the Bitcoin blockchain to the Ethereum blockchain.\n        sendToken: GatewayJS.Tokens.BTC.Btc2Eth,\n\n        // Amount of BTC we are sending (in Satoshis)\n        suggestedAmount: btcToTransfer,\n\n        sendTo: contractAddress,\n\n        // The name of the function we want to call\n        contractFn: \"deposit\",\n\n        nonce: GatewayJS.utils.randomNonce(),\n\n        // Arguments expected for calling `deposit`\n        contractParams: [\n          {\n            name: \"_to\",\n            type: \"address\",\n            value: accounts[0],\n          },\n          {\n            name: \"_commitment\",\n            type: \"bytes32\",\n            value: commitment,\n          },\n          {\n            name: \"_ethAmount\",\n            type: \"uint256\",\n            value: JSBI.BigInt(ethToRetrieve),\n          },\n        ],\n\n        // Web3 provider for submitting mint to Ethereum\n        web3Provider: web3.currentProvider,\n      })\n      .result();\n    setCompleted(true);\n  };\n\n  if (loading) {\n    return (\n      <div className={classes.spinner}>\n        <GridLoader size={16} color={\"#123abc\"} loading={loading} />\n      </div>\n    );\n  } else if (recovering) {\n    return (\n      <Alert severity=\"warning\">\n        <AlertTitle>Pending transactions detected. </AlertTitle>\n        Complete your previous transactions before starting a new one. Failing\n        to do so will result in loss of funds.\n      </Alert>\n    );\n  } else if (completed) {\n    return <DoneCard note={note} onStart={() => setCompleted(false)} />;\n  } else {\n    return <ConvertCard deposit={deposit} />;\n  }\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    borderRadius: 24,\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ConnectButton({ onConnect }) {\n  const classes = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      className={classes.submit}\n      onClick={onConnect}\n      size=\"large\"\n    >\n      Connect your Ethereum wallet\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    borderRadius: 24,\n    position: \"absolute\",\n    width: theme.spacing(50),\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 4, 3),\n    outline: 0,\n  },\n}));\n\nexport default function WrongNetworkPopup({ open, setOpen }) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2>Switch network</h2>\n      <p>Please connect wallet to the Kovan testnet</p>\n      <WrongNetworkPopup />\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal open={open} onClose={handleClose} disableAutoFocus={true}>\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ConnectButton from \"./ConnectButton\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WrongNetworkPopup from \"./WrongNetworkPopup\";\n\nexport default function ConnectScreen({ onConnect, onDisconnect }) {\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  const memoizedConnect = useCallback(async () => {\n    function subscribeToProviderEvents(provider, web3, networkId, accounts) {\n      provider.on(\"accountsChanged\", (newAccounts) => {\n        if (Array.isArray(newAccounts) && newAccounts.length) {\n          onConnect({\n            web3,\n            accounts: newAccounts,\n            networkId,\n            connected: true,\n          });\n        } else {\n          onDisconnect();\n        }\n      });\n\n      provider.on(\"networkChanged\", (newNetworkId) => {\n        if (isNetworkSuppported(newNetworkId)) {\n          onConnect({\n            web3,\n            accounts,\n            networkId: newNetworkId.toString(),\n            connected: true,\n          });\n        } else {\n          onDisconnect();\n          setPopupOpen(true);\n        }\n      });\n    }\n\n    const web3Modal = setupWeb3Modal();\n\n    try {\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      if (provider.isMetaMask) {\n        provider.autoRefreshOnNetworkChange = false;\n      }\n\n      const accounts = await web3.eth.getAccounts();\n\n      subscribeToProviderEvents(provider, web3, networkId, accounts);\n      setPopupOpen(!isNetworkSuppported(networkId));\n      if (\n        Array.isArray(accounts) &&\n        accounts.length &&\n        isNetworkSuppported(networkId)\n      ) {\n        onConnect({\n          web3,\n          accounts,\n          networkId: networkId.toString(),\n          connected: true,\n        });\n      }\n    } catch (error) {\n      console.log(\"error: \" + error);\n      onDisconnect();\n    }\n  }, [onConnect, onDisconnect]);\n\n  function isNetworkSuppported(networkId) {\n    return networkId === 42;\n  }\n\n  function setupWeb3Modal() {\n    const providerOptions = {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: \"34551d538c09417bab045d7ae2b20a83\",\n        },\n      },\n    };\n    const web3Modal = new Web3Modal({\n      cacheProvider: true,\n      providerOptions,\n      theme: \"dark\",\n    });\n    return web3Modal;\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\" gutterBottom>\n          Convert your Bitcoin to privacy preserving Ether.\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Use this dApp to on-ramp to Ethereum while retaining privacy.\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <ConnectButton\n          onConnect={memoizedConnect}\n          onDisconnect={onDisconnect}\n        />\n        <WrongNetworkPopup open={popupOpen} setOpen={setPopupOpen} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"../components/Header\";\nimport ConvertScreen from \"../components/ConvertScreen\";\nimport ConnectScreen from \"../components/ConnectScreen\";\nimport Web3Context from \"../state/Web3Context\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(16),\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(0, 2, 0),\n      marginTop: theme.spacing(3),\n    },\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n  const [web3State, setWeb3State] = useState({ connected: false });\n\n  return (\n    <Web3Context.Provider value={web3State}>\n      <Grid container className={classes.root}>\n        <Header />\n        <Grid\n          container\n          spacing={4}\n          alignItems=\"center\"\n          className={classes.content}\n          direction=\"column\"\n        >\n          {!web3State.connected ? (\n            <Container component=\"main\" maxWidth=\"xs\">\n              <ConnectScreen\n                onConnect={setWeb3State}\n                onDisconnect={() => setWeb3State({ connected: false })}\n              />\n            </Container>\n          ) : (\n            <Container component=\"main\" maxWidth=\"sm\" fixed>\n              <ConvertScreen />\n            </Container>\n          )}\n        </Grid>\n      </Grid>\n    </Web3Context.Provider>\n  );\n}\n","import React, { Component } from \"react\";\nimport MainPage from \"./pages/MainPage\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./App.css\";\nimport { IntlProvider } from \"react-intl\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#0E233D\",\n      paper: \"#1A365C\",\n    },\n    primary: {\n      main: \"#0084FD\",\n    },\n    secondary: {\n      main: \"#586e9a\",\n    },\n  },\n});\nclass App extends Component {\n  render() {\n    return (\n      <IntlProvider locale={navigator.language}>\n        <ThemeProvider theme={darkTheme}>\n          <CssBaseline />\n          <MainPage />\n        </ThemeProvider>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"typeface-roboto\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/logo.899f6e40.svg\";","import crypto from \"crypto\";\nimport { bigInt as _bigInt } from \"snarkjs\";\nimport { babyJub, pedersenHash as _pedersenHash } from \"circomlib\";\n\nconst bigInt = _bigInt;\n\n/** Generate random number of specified byte length */\nconst rbigint = (nbytes) => _bigInt.leBuff2int(crypto.randomBytes(nbytes));\n\n/** Compute pedersen hash */\nconst pedersenHash = (data) => babyJub.unpackPoint(_pedersenHash.hash(data))[0];\n\n/** BigNumber to hex string of specified length */\nfunction toHex(number, length = 32) {\n  const str =\n    number instanceof Buffer\n      ? number.toString(\"hex\")\n      : bigInt(number).toString(16);\n  return \"0x\" + str.padStart(length * 2, \"0\");\n}\n\n/**\n * Create deposit object from secret and nullifier\n */\nfunction createDeposit({ nullifier, secret }) {\n  const deposit = { nullifier, secret };\n  deposit.preimage = Buffer.concat([\n    deposit.nullifier.leInt2Buff(31),\n    deposit.secret.leInt2Buff(31),\n  ]);\n  deposit.commitment = pedersenHash(deposit.preimage);\n  deposit.nullifierHash = pedersenHash(deposit.nullifier.leInt2Buff(31));\n  return deposit;\n}\n\nexport async function deposit(web3, ethToRetrieve) {\n  let netId = await web3.eth.net.getId();\n  const decimalEth = ethToRetrieve / 1e18;\n  const deposit = createDeposit({\n    nullifier: rbigint(31),\n    secret: rbigint(31),\n  });\n  const note = toHex(deposit.preimage, 62);\n  const noteString = `tornado-eth-${decimalEth}-${netId}-${note}`;\n\n  return { note: noteString, commitment: toHex(deposit.commitment) };\n}\n"],"sourceRoot":""}